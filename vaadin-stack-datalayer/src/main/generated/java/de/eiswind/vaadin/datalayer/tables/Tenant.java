/**
 * This class is generated by jOOQ
 */
package de.eiswind.vaadin.datalayer.tables;


import de.eiswind.vaadin.datalayer.Keys;
import de.eiswind.vaadin.datalayer.Master;
import de.eiswind.vaadin.datalayer.tables.records.TenantRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tenant extends TableImpl<TenantRecord> {

	private static final long serialVersionUID = -780214257;

	/**
	 * The reference instance of <code>master.tenant</code>
	 */
	public static final Tenant TENANT = new Tenant();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<TenantRecord> getRecordType() {
		return TenantRecord.class;
	}

	/**
	 * The column <code>master.tenant.id</code>.
	 */
	public final TableField<TenantRecord, Long> ID = createField("id", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

	/**
	 * The column <code>master.tenant.tenant_name</code>.
	 */
	public final TableField<TenantRecord, String> TENANT_NAME = createField("tenant_name", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * The column <code>master.tenant.schema</code>.
	 */
	public final TableField<TenantRecord, String> SCHEMA = createField("schema", org.jooq.impl.SQLDataType.VARCHAR.length(100).nullable(false), this, "");

	/**
	 * Create a <code>master.tenant</code> table reference
	 */
	public Tenant() {
		this("tenant", null);
	}

	/**
	 * Create an aliased <code>master.tenant</code> table reference
	 */
	public Tenant(String alias) {
		this(alias, TENANT);
	}

	private Tenant(String alias, Table<TenantRecord> aliased) {
		this(alias, aliased, null);
	}

	private Tenant(String alias, Table<TenantRecord> aliased, Field<?>[] parameters) {
		super(alias, Master.MASTER, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<TenantRecord, Long> getIdentity() {
		return Keys.IDENTITY_TENANT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<TenantRecord> getPrimaryKey() {
		return Keys.PK_TENANT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<TenantRecord>> getKeys() {
		return Arrays.<UniqueKey<TenantRecord>>asList(Keys.PK_TENANT, Keys.UK_TENANT_TENANT_NAME, Keys.UK_TENANT_SCHEMA_NAME);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Tenant as(String alias) {
		return new Tenant(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Tenant rename(String name) {
		return new Tenant(name, null);
	}
}
