/**
 * This class is generated by jOOQ
 */
package de.eiswind.vaadin.datalayer.public_.tables.records;


import de.eiswind.vaadin.datalayer.public_.tables.Tenant;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.1"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TenantRecord extends UpdatableRecordImpl<TenantRecord> implements Record9<String, String, Integer, String, String, String, String, String, String> {

	private static final long serialVersionUID = -282628149;

	/**
	 * Setter for <code>public.tenant.tenant</code>.
	 */
	public void setTenant(String value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>public.tenant.tenant</code>.
	 */
	public String getTenant() {
		return (String) getValue(0);
	}

	/**
	 * Setter for <code>public.tenant.host</code>.
	 */
	public void setHost(String value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>public.tenant.host</code>.
	 */
	public String getHost() {
		return (String) getValue(1);
	}

	/**
	 * Setter for <code>public.tenant.port</code>.
	 */
	public void setPort(Integer value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>public.tenant.port</code>.
	 */
	public Integer getPort() {
		return (Integer) getValue(2);
	}

	/**
	 * Setter for <code>public.tenant.database</code>.
	 */
	public void setDatabase(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>public.tenant.database</code>.
	 */
	public String getDatabase() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>public.tenant.schema</code>.
	 */
	public void setSchema(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>public.tenant.schema</code>.
	 */
	public String getSchema() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>public.tenant.user</code>.
	 */
	public void setUser(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>public.tenant.user</code>.
	 */
	public String getUser() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>public.tenant.password</code>.
	 */
	public void setPassword(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>public.tenant.password</code>.
	 */
	public String getPassword() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>public.tenant.min_connections</code>.
	 */
	public void setMinConnections(String value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>public.tenant.min_connections</code>.
	 */
	public String getMinConnections() {
		return (String) getValue(7);
	}

	/**
	 * Setter for <code>public.tenant.max_connections</code>.
	 */
	public void setMaxConnections(String value) {
		setValue(8, value);
	}

	/**
	 * Getter for <code>public.tenant.max_connections</code>.
	 */
	public String getMaxConnections() {
		return (String) getValue(8);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<String> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record9 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<String, String, Integer, String, String, String, String, String, String> fieldsRow() {
		return (Row9) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row9<String, String, Integer, String, String, String, String, String, String> valuesRow() {
		return (Row9) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field1() {
		return Tenant.TENANT.TENANT_;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field2() {
		return Tenant.TENANT.HOST;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field3() {
		return Tenant.TENANT.PORT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Tenant.TENANT.DATABASE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Tenant.TENANT.SCHEMA;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return Tenant.TENANT.USER;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return Tenant.TENANT.PASSWORD;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field8() {
		return Tenant.TENANT.MIN_CONNECTIONS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field9() {
		return Tenant.TENANT.MAX_CONNECTIONS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value1() {
		return getTenant();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value2() {
		return getHost();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value3() {
		return getPort();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getDatabase();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getSchema();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getUser();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getPassword();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value8() {
		return getMinConnections();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value9() {
		return getMaxConnections();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TenantRecord value1(String value) {
		setTenant(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TenantRecord value2(String value) {
		setHost(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TenantRecord value3(Integer value) {
		setPort(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TenantRecord value4(String value) {
		setDatabase(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TenantRecord value5(String value) {
		setSchema(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TenantRecord value6(String value) {
		setUser(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TenantRecord value7(String value) {
		setPassword(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TenantRecord value8(String value) {
		setMinConnections(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TenantRecord value9(String value) {
		setMaxConnections(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public TenantRecord values(String value1, String value2, Integer value3, String value4, String value5, String value6, String value7, String value8, String value9) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		value9(value9);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached TenantRecord
	 */
	public TenantRecord() {
		super(Tenant.TENANT);
	}

	/**
	 * Create a detached, initialised TenantRecord
	 */
	public TenantRecord(String tenant, String host, Integer port, String database, String schema, String user, String password, String minConnections, String maxConnections) {
		super(Tenant.TENANT);

		setValue(0, tenant);
		setValue(1, host);
		setValue(2, port);
		setValue(3, database);
		setValue(4, schema);
		setValue(5, user);
		setValue(6, password);
		setValue(7, minConnections);
		setValue(8, maxConnections);
	}
}
